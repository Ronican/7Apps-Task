"""Change extracted_text to Text type

Revision ID: cbcea96263ef
Revises: 
Create Date: 2024-12-02 16:33:28.389127

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cbcea96263ef'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('pdfs',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=512), nullable=False),
    sa.Column('upload_time', sa.DateTime(), nullable=True),
    sa.Column('page_count', sa.Integer(), nullable=False),
    sa.Column('extracted_text', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pdfs_id'), 'pdfs', ['id'], unique=False)
    op.drop_table('pdf_documents')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('pdf_documents',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('filename', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('pdf_metadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('uploaded_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='pdf_documents_pkey')
    )
    op.drop_index(op.f('ix_pdfs_id'), table_name='pdfs')
    op.drop_table('pdfs')
    # ### end Alembic commands ###
